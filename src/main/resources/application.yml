# application.yml
server:
  port: 8086
  servlet:
    context-path: /sales-management

spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:sales_management_db}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
#    username: ${DB_USER:postgres}
#    password: ${DB_PASSWORD:12345678}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8081/user-management
#  rabbitmq:
#    host: ${RABBITMQ_HOST:localhost}
#    port: ${RABBITMQ_PORT:5672}
#    username: ${RABBITMQ_USERNAME:guest}
#    password: ${RABBITMQ_PASSWORD:guest}

application:
  security:
    jwt:
      secret-key: ${JWT_SECRET_KEY}
  customer:
    service:
      url: ${CUSTOMER_MANAGEMENT_URL}
#        url: ${CUSTOMER_MANAGEMENT_URL:http://customer-management-service:8082/customer-management}
  product:
    service:
      url: ${PRODUCT_MANAGEMENT_URL}
#      url: ${PRODUCT_MANAGEMENT_URL:http://product-management-service:8083/product-management}

  shop:
    service:
      url: ${SHOP_MANAGEMENT_URL}
#     url: ${SHOP_MANAGEMENT_URL:http://shop-management-service:8085/shop-management}

#  price:
#    service:
#      url: http://localhost:8084/price-list-management

#rabbitmq:
#  exchange:
#    name: order.exchange
#  routing:
#    key: order.routing.key
#  queue:
#    name: order.queue

logging:
  level:
    org.springframework.security: DEBUG
    com.supermarket.salesmanagement: DEBUG